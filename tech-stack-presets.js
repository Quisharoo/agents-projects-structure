/**
 * Tech Stack Presets Configuration
 * Defines common technology stack presets for quick initialization
 */

const presets = {
  nextjs: {
    name: 'Next.js (TypeScript + PostgreSQL)',
    framework: 'Next.js 15',
    language: 'TypeScript',
    database: 'PostgreSQL',
    orm: 'Prisma',
    testing: 'Jest',
    otherTools: ['Tailwind CSS', 'React'],
    sourceDirectory: 'app',
    apiDirectory: 'app/api',
    servicesDirectory: 'lib/services',
    modelsDirectory: 'lib/models',
    componentsDirectory: 'components',
    utilsDirectory: 'lib/utils',
    configDirectory: 'lib/config',
    testDirectory: 'tests',
    testCommand: 'npm test',
    testCoverageCommand: 'npm test -- --coverage',
    testWatchCommand: 'npm test -- --watch',
    devServerCommand: 'npm run dev',
    buildCommand: 'npm run build',
    lintCommand: 'npm run lint',
    migrateCommand: 'npx prisma migrate dev',
    seedCommand: 'npx prisma db seed'
  },
  django: {
    name: 'Django (Python + PostgreSQL)',
    framework: 'Django',
    language: 'Python 3.11+',
    database: 'PostgreSQL',
    orm: 'Django ORM',
    testing: 'Pytest',
    otherTools: ['Django REST Framework', 'Celery'],
    sourceDirectory: 'apps',
    apiDirectory: 'apps/api',
    servicesDirectory: 'apps/services',
    modelsDirectory: 'apps/models',
    componentsDirectory: 'templates',
    utilsDirectory: 'apps/utils',
    configDirectory: 'config',
    testDirectory: 'tests',
    testCommand: 'pytest',
    testCoverageCommand: 'pytest --cov',
    testWatchCommand: 'pytest-watch',
    devServerCommand: 'python manage.py runserver',
    buildCommand: 'python setup.py build',
    lintCommand: 'pylint apps',
    migrateCommand: 'python manage.py migrate',
    seedCommand: 'python manage.py loaddata fixtures'
  },
  rails: {
    name: 'Ruby on Rails (PostgreSQL)',
    framework: 'Ruby on Rails',
    language: 'Ruby 3.2+',
    database: 'PostgreSQL',
    orm: 'ActiveRecord',
    testing: 'RSpec',
    otherTools: ['Sidekiq', 'Action Cable'],
    sourceDirectory: 'app',
    apiDirectory: 'app/controllers/api',
    servicesDirectory: 'app/services',
    modelsDirectory: 'app/models',
    componentsDirectory: 'app/views',
    utilsDirectory: 'lib',
    configDirectory: 'config',
    testDirectory: 'spec',
    testCommand: 'rspec',
    testCoverageCommand: 'rspec --coverage',
    testWatchCommand: 'guard',
    devServerCommand: 'rails server',
    buildCommand: 'bundle install',
    lintCommand: 'rubocop',
    migrateCommand: 'rails db:migrate',
    seedCommand: 'rails db:seed'
  },
  go: {
    name: 'Go (PostgreSQL)',
    framework: 'Go',
    language: 'Go 1.21+',
    database: 'PostgreSQL',
    orm: 'pgx / sqlc',
    testing: 'Go test',
    otherTools: ['Gin/Echo', 'GORM'],
    sourceDirectory: 'internal',
    apiDirectory: 'internal/api',
    servicesDirectory: 'internal/services',
    modelsDirectory: 'internal/models',
    componentsDirectory: 'web/templates',
    utilsDirectory: 'pkg',
    configDirectory: 'config',
    testDirectory: 'tests',
    testCommand: 'go test ./...',
    testCoverageCommand: 'go test -cover ./...',
    testWatchCommand: 'air',
    devServerCommand: 'go run cmd/server/main.go',
    buildCommand: 'go build',
    lintCommand: 'golangci-lint run',
    migrateCommand: 'migrate -path db/migrations -database $DATABASE_URL up',
    seedCommand: 'go run scripts/seed.go'
  },
  express: {
    name: 'Express.js (TypeScript + PostgreSQL)',
    framework: 'Express.js',
    language: 'TypeScript',
    database: 'PostgreSQL',
    orm: 'TypeORM / Prisma',
    testing: 'Jest',
    otherTools: ['Node.js', 'Redis'],
    sourceDirectory: 'src',
    apiDirectory: 'src/routes',
    servicesDirectory: 'src/services',
    modelsDirectory: 'src/models',
    componentsDirectory: 'src/views',
    utilsDirectory: 'src/utils',
    configDirectory: 'src/config',
    testDirectory: 'tests',
    testCommand: 'npm test',
    testCoverageCommand: 'npm test -- --coverage',
    testWatchCommand: 'npm test -- --watch',
    devServerCommand: 'npm run dev',
    buildCommand: 'npm run build',
    lintCommand: 'npm run lint',
    migrateCommand: 'npm run migrate',
    seedCommand: 'npm run seed'
  }
};

module.exports = presets;

